nombres_comun  <- colnames_antic[numeros]
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
full_join(anticuerpos, by = c(nombres_comun))
View(base_completa)
nombres_comun
anticuerpos <- anticuerpos[1, which(colnames(anticuerpos) == "ESPICULA_CUANTITATIVA")]
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
full_join(anticuerpos, by = c("ID_NSS" = "NSS"))
anticuerpos <- read_excel("C:/Users/Valeria/Downloads/ANTICUPERPOS-PCR.xlsx", skip = 1) %>%
mutate(EDAD = if_else(EDAD == "sergio", "", EDAD)) %>%
mutate(EDAD = as.double(EDAD))
anticuerpos <- anticuerpos[, 1:which(colnames(anticuerpos) == "ESPICULA_CUANTITATIVA")]
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
full_join(anticuerpos, by = c("ID_NSS" = "NSS"))
View(base_completa)
base_completa$ESPICULA_CUANTITATIVA %>% unique()
not_espicula <- base_completa %>% filter(is.na(ESPICULA_CUANTITATIVA))
espicula <- base_completa %>% filter(!(is.na(ESPICULA_CUANTITATIVA)))
View(espicula)
resultados_pruebas
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
full_join(anticuerpos, by = c("ID_NSS" = "NSS"))
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
left_join(anticuerpos, by = c("ID_NSS" = "NSS"))
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
anti_join(anticuerpos, by = c("ID_NSS" = "NSS"))
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
inner_join(anticuerpos, by = c("ID_NSS" = "NSS"))
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
full_join(anticuerpos, by = c("ID_NSS" = "NSS"))
base_NOTcomun <- anticuerpos %>%
anti_join(cuestionario, by = c("ID_NSS" = "NSS"))
base_NOTcomun <- anticuerpos %>%
anti_join(cuestionario, by = c("NSS" = "ID_NSS"))
base_NOTcomun <- anticuerpos %>%
mutate(NSS = as.character(NSS)) %>%
anti_join(cuestionario, by = c("NSS" = "ID_NSS"))
cuestionario_2 <- cuestionario %>%
mutate(NSS = as.double(NSS))
cuestionario_2 <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS))
base_NOTcomun <- anticuerpos %>%
anti_join(cuestionario_2, by = c("NSS" = "ID_NSS"))
CDMX <- read_delim("C:/Users/Valeria/Downloads/EP_WALMART_CDMX.txt", delim = "\t",
col_types = cols(CONTACTO_RIESGO_ADULTO = col_character(), ##solo es este
RAZON_NO_ATENCION_OTRO = col_character(),
TIEMPO_NO_FUMAR_MESES  = col_double(),
ID_NSS = col_character())) %>%
filter(!(ID_REGISTRO_ENCUESTA == 58150))
JAL  <- read_delim("C:/Users/Valeria/Downloads/EP_WALMART_JAL.txt", delim = "\t",
col_types = cols(CONTACTO_RIESGO_ADULTO = col_character(),
RAZON_NO_ATENCION_OTRO = col_character(),
DIAS_HOSPITALIZADO     = col_double(),
ID_NSS = col_character()))
anticuerpos <- read_excel("C:/Users/Valeria/Downloads/ANTICUPERPOS-PCR.xlsx",
skip = 1, col_types = NSS = col_character()) %>%
mutate(EDAD = if_else(EDAD == "sergio", "", EDAD)) %>%
mutate(EDAD = as.double(EDAD))
?read_excel
anticuerpos <- read_excel("C:/Users/Valeria/Downloads/ANTICUPERPOS-PCR.xlsx",
skip = 1, col_types = cols(NSS = col_character())) %>%
mutate(EDAD = if_else(EDAD == "sergio", "", EDAD)) %>%
mutate(EDAD = as.double(EDAD))
colnames(anticuerpos)
col_types <- readxl:::xlsx_col_types(path = "C:/Users/Valeria/Downloads/ANTICUPERPOS-PCR.xlsx",
nskip = 1, n = 1)
anticuerpos <- read_excel("C:/Users/Valeria/Downloads/ANTICUPERPOS-PCR.xlsx",
skip = 1, guess_max =10000) %>%
mutate(EDAD = if_else(EDAD == "sergio", "", EDAD)) %>%
mutate(EDAD = as.double(EDAD))
View(anticuerpos)
glimpse(anticuerpos)
#todos salen negativos (no hay NA)
resultados_pruebas <- anticuerpos$"RESULTADO_SARS-COV-2" %>% unique()
anticuerpos <- anticuerpos[, 1:which(colnames(anticuerpos) == "ESPICULA_CUANTITATIVA")]
base_NOTcomun <- anticuerpos %>%
mutate(NSS = as.character(NSS)) %>%
anti_join(cuestionario, by = c("NSS" = "ID_NSS"))
base_NOTcomun_2 <- cuestionario %>%
anti_join(anticuerpos, by = c("ID_NSS" = "NSS"))
cuestionario_2 <- cuestionario %>%
mutate(ID_NSS = as.character(ID_NSS))
base_NOTcomun_2 <- cuestionario_2 %>%
anti_join(anticuerpos, by = c("ID_NSS" = "NSS"))
anticuerpos_2 <- anticuerpos %>%
mutate(NSS = as.character(NSS))
base_NOTcomun_2 <- cuestionario_2 %>%
anti_join(anticuerpos_2, by = c("ID_NSS" = "NSS"))
cuestionario_2 <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS))
base_NOTcomun_2 <- anticuerpos_2 %>%
anti_join(cuestionario_2, by = c("ID_NSS" = "NSS"))
base_NOTcomun_2 <- anticuerpos_2 %>%
anti_join(cuestionario_2, by = c("NSS" = "ID_NSS"))
base_NOTcomun_2 <- anticuerpos %>%
anti_join(cuestionario_2, by = c("NSS" = "ID_NSS"))
View(base_NOTcomun_2)
View(CDMX)
maria <- CDMX %>% filter(CVE_ID_ASIGNACION_NSS == 8610927)
View(maria)
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
inner_join(anticuerpos, by = c("ID_NSS" = "NSS"))
rebe <- base_completa %>% filter(NOMBRE.x == "REBECA")
rebe <- CDMX %>% filter(NOMBRE == "REBECA")
View(rebe)
rebe <- base_completa %>% filter(ID_NSS == 01066000330)
yaz <- cuestionario %>% filter(NOMBRE == "YASMIN")
View(yaz)
yaz <- cuestionario %>% filter(NOMBRE == "YAzMIN")
yaz <- cuestionario %>% filter(NOMBRE == "YAZMIN")
yaz <- base_completa %>% filter(NOMBRE == "YAZMIN")
yaz <- base_completa %>% filter(NOMBRE.x == "YAZMIN")
View(base_NOTcomun_2)
alex <- CDMX %>% filter(ID_NSS == 17160071092)
alex <- JAL %>% filter(ID_NSS == 17160071092)
alex <- cuestionario %>% filter(ID_NSS == 17160071092)
alex <- cuestionario %>% filter(NOMBRE == ALEJANDRO)
alex <- cuestionario %>% filter(NOMBRE == "ALEJANDRO")
View(alex)
match_nombre  <- base_NOTcomun_2 %>%
left_join(cuestionario, by = c("NOMBRE",
"APELLIDO_PATERNO" = "AP_PATERNO",
"APELLIDO_MATERNO" = "AP_MATERNO"))
View(match_nombre)
match_nombre  <- base_NOTcomun_2 %>%
right_join(cuestionario, by = c("NOMBRE",
"APELLIDO_PATERNO" = "AP_PATERNO",
"APELLIDO_MATERNO" = "AP_MATERNO"))
match_nombre  <- base_NOTcomun_2 %>%
anti_join(cuestionario, by = c("NOMBRE",
"APELLIDO_PATERNO" = "AP_PATERNO",
"APELLIDO_MATERNO" = "AP_MATERNO"))
match_nombre  <- base_NOTcomun_2 %>%
anti_join(cuestionario, by = c("APELLIDO_PATERNO" = "AP_PATERNO",
"APELLIDO_MATERNO" = "AP_MATERNO"))
match_nombre  <- base_NOTcomun_2 %>%
mutate(APELLIDO_PATERNO = toupper(APELLIDO_PATERNO)) %>%
mutate(APELLIDO_MATERNO = toupper(APELLIDO_MATERNO)) %>%
mutate(NOMBRE = toupper(NOMBRE)) %>%
anti_join(cuestionario, by = c("NOMBRE", "APELLIDO_PATERNO" = "AP_PATERNO",
"APELLIDO_MATERNO" = "AP_MATERNO"))
View(match_nombre)
aletsee <- cuestionario %>% filter(NOMBRE == "ALETSEE")
remove(aletsee)
lozoya <- cuestionario %>% filter(APELLIDO_PATERNO == "OROZCO")
lozoya <- cuestionario %>% filter(AP_PATERNO == "OROZCO")
View(lozoya)
View(match_nombre)
write.csv(match_nombre, "no_tienen_cuestionario.csv")
getwd()
glimpse(CDMX)
library(readr)
library(tidyverse)
library(lubridate)
library(dplyr)
library(readxl)
CDMX <- read_delim("C:/Users/Valeria/Downloads/EP_WALMART_CDMX.txt", delim = "\t",
col_types = cols(CONTACTO_RIESGO_ADULTO = col_character(), ##solo es este
RAZON_NO_ATENCION_OTRO = col_character(),
TIEMPO_NO_FUMAR_MESES  = col_double(),
ID_NSS = col_character())) %>%
filter(!(ID_REGISTRO_ENCUESTA == 58150))
JAL  <- read_delim("C:/Users/Valeria/Downloads/EP_WALMART_JAL.txt", delim = "\t",
col_types = cols(CONTACTO_RIESGO_ADULTO = col_character(),
RAZON_NO_ATENCION_OTRO = col_character(),
DIAS_HOSPITALIZADO     = col_double(),
ID_NSS = col_character()))
anticuerpos <- read_excel("C:/Users/Valeria/Downloads/ANTICUPERPOS-PCR.xlsx",
skip = 1, guess_max =10000) %>%
mutate(EDAD = if_else(EDAD == "sergio", "", EDAD)) %>%
mutate(EDAD = as.double(EDAD))
cuestionario <- bind_rows(CDMX, JAL)
library(readxl)
COVID_IMSS_ABRIL <- read_excel("C:/Users/Valeria/Downloads/EPCOVID_v2_3_iggPCR/EPCOVID_v2/datasets/COVID IMSS ABRIL.xlsx",
sheet = "ABRIL 21", skip = 1)
View(COVID_IMSS_ABRIL)
prueba <- cuestionario %>%
full_join(COVID_IMSS_ABRIL, by = c("ID_NSS" = "NSS"))
str(COVID_IMSS_ABRIL$NSS)
prueba <- cuestionario %>%
mutate(ID_NSS = as.double(NSS)) %>%
full_join(COVID_IMSS_ABRIL, by = c("ID_NSS" = "NSS"))
cuestionario$ID_NSS
prueba <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
full_join(COVID_IMSS_ABRIL, by = c("ID_NSS" = "NSS"))
View(prueba)
View(COVID_IMSS_ABRIL)
COVID_IMSS_ABRIL <- COVID_IMSS_ABRIL[, 1:which(colnames == "RESULTADO_SARS-COV-2")]
COVID_IMSS_ABRIL <- COVID_IMSS_ABRIL[, 1:which(colnames = "RESULTADO_SARS-COV-2")]
COVID_IMSS_ABRIL <- COVID_IMSS_ABRIL[, 1:which(colnames(COVID_IMSS_ABRIL) == "RESULTADO_SARS-COV-2")]
View(cuestionario)
numeros <- colnames(COVID_IMSS_ABRIL) %in% colnames(cuestionario)
numeros
numeros <- which(colnames(COVID_IMSS_ABRIL) %in% colnames(cuestionario))
nombres <- colnames(COVID_IMSS_ABRIL)[numeros]
prueba <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
full_join(COVID_IMSS_ABRIL, by = c("ID_NSS" = "NSS", nombres))
View(prueba)
prueba <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
full_join(COVID_IMSS_ABRIL, by = c("ID_NSS" = "NSS"))
View(prueba)
View(CDMX)
View(anticuerpos)
prueba <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
full_join(COVID_IMSS_ABRIL, by = nombres))
prueba <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
full_join(COVID_IMSS_ABRIL, by = nombres)
prueba <- cuestionario %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
full_join(COVID_IMSS_ABRIL, by = c("ID_NSS" = "NSS"))
prueba$CENTRO_DE_TRABAJO
write.csv(prueba, "cuestionario_conEstratos.csv")
getwd()
anticuerpos <- anticuerpos[, 1:which(colnames(anticuerpos) == "ESPICULA_CUANTITATIVA")]
base_completa <- cuestionario %>%
mutate(CVE_ID_ASIGNACION_NSS = as.double(CVE_ID_ASIGNACION_NSS)) %>%
mutate(ID_NSS = as.double(ID_NSS)) %>%
mutate(base_datos = "cuestionario") %>%
inner_join(anticuerpos, by = c("ID_NSS" = "NSS"))
View(base_completa)
write.csv(base_completa, "pruebaPCRsinCuestionario.csv")
knitr::opts_chunk$set(echo = TRUE)
datitt <- read_csv("ITT2019_S40_S99.csv",
col_types = cols(NUM_FOLIO_CEDULA = col_character(),
RAZON_SOCIAL     = col_character(),
RFC              = col_character(),
IMPORTE_CEDULA_DIFERENCIA = col_double()))
library(readr)
library(tidyverse)
library(ggplot2)
library(dplyr)
datitt <- read_csv("ITT2019_S40_S99.csv",
col_types = cols(NUM_FOLIO_CEDULA = col_character(),
RAZON_SOCIAL     = col_character(),
RFC              = col_character(),
IMPORTE_CEDULA_DIFERENCIA = col_double()))
datitt <- read_csv("ITT2019_S40_S99.csv",
col_types = cols(NUM_FOLIO_CEDULA = col_character(),
RAZON_SOCIAL     = col_character(),
RFC              = col_character(),
IMPORTE_CEDULA_DIFERENCIA = col_double()))
datitt <- read_csv("ITT2019_S40_S99.csv",
col_types = cols(NUM_FOLIO_CEDULA = col_character(),
RAZON_SOCIAL     = col_character(),
RFC              = col_character(),
IMPORTE_CEDULA_DIFERENCIA = col_double()))
datitt <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(IS_SALARIO_TOPADO, DIVISION, GRUPO) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "GRUPO"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
View(datitt)
datitt <- read_csv("ITT2019_S40_S99.csv",
col_types = cols(NUM_FOLIO_CEDULA = col_character(),
RAZON_SOCIAL     = col_character(),
RFC              = col_character(),
IMPORTE_CEDULA_DIFERENCIA = col_double()))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
datitt <- read_csv("ITT2019_S40_S99.csv",
col_types = cols(NUM_FOLIO_CEDULA = col_character(),
RAZON_SOCIAL     = col_character(),
RFC              = col_character(),
IMPORTE_CEDULA_DIFERENCIA = col_double()))
datitt <- datitt %>%
mutate(DIVISION = str_replace_all(DIVISION, "�", "O"))
dias_promedio <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(IS_SALARIO_TOPADO, DIVISION, GRUPO) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "GRUPO"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
dias_promedio2 <- melt(dias_promedio)
ggplot(dias_promedio2, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~DIVISION, ncol = 5, scales = "free") +
labs(x = "División de trabajo", y = "Días de incapacidad")
comercio <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
filter(str_detect(DIVISION, "COMERCIO")) %>%
group_by(IS_SALARIO_TOPADO, GRUPO) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("GRUPO"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
comercio <- melt(comercio)
ggplot(comercio, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~GRUPO, ncol = 3, scales = "free") +
labs(x = "División de trabajo", y = "Días de incapacidad")
servicios <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
filter(str_detect(DIVISION, "SERVICIOS PARA EMPRESAS")) %>%
group_by(IS_SALARIO_TOPADO, GRUPO) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("GRUPO"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
servicios <- melt(servicios)
ggplot(servicios, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~GRUPO, ncol = 3, scales = "free") +
labs(x = "División de trabajo", y = "Días de incapacidad")
tranformacion <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
filter(str_detect(DIVISION, "TRANSFORMACION")) %>%
group_by(IS_SALARIO_TOPADO, GRUPO) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("GRUPO"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
tranformacion <- melt(tranformacion)
ggplot(tranformacion, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~GRUPO, ncol = 5, scales = "free") +
labs(x = "División de trabajo", y = "Días de incapacidad")
razon_social <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(IS_SALARIO_TOPADO, DIVISION, RAZON_SOCIAL) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "RAZON_SOCIAL"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
razon_social <- melt(razon_social)
ggplot(razon_social, aes(x = DIVISION, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~DIVISION, ncol = 5, scales = "free") +
labs(x = "División de trabajo", y = "Días de incapacidad")
razon_social <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(IS_SALARIO_TOPADO, DIVISION, RAZON_SOCIAL) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "RAZON_SOCIAL"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
razon_social <- melt(razon_social)
ggplot(razon_social, aes(x = DIVISION, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~DIVISION, ncol = 5, scales = "free") +
labs(x = "División de trabajo", y = "Días de incapacidad")
View(razon_social)
dias_promedio2 <- melt(dias_promedio)
ggplot(dias_promedio2, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~DIVISION, ncol = 5, scales = "free") +
scale_color_manual("Dias promedio", values = c("Salario Topado" = "#222D39",
"Salario No Topado" = "#D1713B"))
labs(x = "División de trabajo",
y = "Días de incapacidad")
?geom_text
dias_promedio2 <- melt(dias_promedio)
ggplot(dias_promedio2, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~DIVISION, ncol = 5, scales = "free") +
scale_color_manual("Dias promedio", values = c("Salario Topado" = "#222D39",
"Salario No Topado" = "#D1713B")) +
labs(x = "División de trabajo",
y = "Días de incapacidad",
fill = "Días promedio")
dias_promedio2 <- melt(dias_promedio)
ggplot(dias_promedio2, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~DIVISION, ncol = 5, scales = "free") +
scale_fill_discrete(name="Dias promedio",
labels=c("Salario No Topado", "Salario Topado"))  +
labs(x = "División de trabajo",
y = "Días de incapacidad")
?facet_wrap
View(dias_promedio)
dias_promedio <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(IS_SALARIO_TOPADO, DIVISION, GRUPO) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "GRUPO"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
colnames(dias_promedio) <- c("División", "Grupo",
"Días Promedio(Salario No Topado)",
"Días Promedio(Salario Topado)")
?show
show(dias_promedio)
library(knitr)
kable(dias_promedio, caption = "Días promedio")
t.test(x = dias_promedio$`Días Promedio(Salario Topado)`,
y = dias_promedio$`Días Promedio(Salario No Topado)`,
alternative = "greater", conf.level = 0.95 )
comercio <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
filter(str_detect(DIVISION, "COMERCIO")) %>%
group_by(IS_SALARIO_TOPADO, GRUPO) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("GRUPO"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
comercio <- melt(comercio)
ggplot(comercio, aes(x = GRUPO, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~GRUPO, ncol = 3, scales = "free") +
scale_fill_discrete(name="Dias promedio",
labels=c("Salario No Topado", "Salario Topado"))  +
labs(x = "División de trabajo",
y = "Días de incapacidad")
View(razon_social)
razon_social <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(IS_SALARIO_TOPADO, DIVISION, RAZON_SOCIAL) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "RAZON_SOCIAL"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
razon_social2 <- melt(razon_social)
ggplot(razon_social2, aes(x = RAZON_SOCIAL, y = value, fill = variable), xlab="Grupo") +
geom_bar(stat="identity", width = 0.5, position = "dodge") +
facet_wrap(~DIVISION, ncol = 5, scales = "free") +
scale_fill_discrete(name="Dias promedio",
labels=c("Salario No Topado", "Salario Topado"))  +
labs(x = "División de trabajo", y = "Días de incapacidad")
razon_social <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(DIVISION, RAZON_SOCIAL) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "RAZON_SOCIAL"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
razon_social <- datitt %>%
mutate(IS_SALARIO_TOPADO = if_else(IMP_SALARIO_DIARIO == max(IMP_SALARIO_DIARIO),
"Salario Topado", "Salario No Topado")) %>%
filter(DES_RAMO == "ENFERMEDAD GENERAL") %>%
filter(TIP_INCAPACIDAD == 2) %>%
group_by(IS_SALARIO_TOPADO, DIVISION, RAZON_SOCIAL) %>%
summarise(`DIAS PROMEDIO` = mean(`NUM_DIAS_SUBSIDIADOS`)) %>%
pivot_wider(id_cols = c("DIVISION", "RAZON_SOCIAL"), values_from = "DIAS PROMEDIO",
names_from = "IS_SALARIO_TOPADO", names_prefix = "DIAS PROMEDIO")
x <- 8r
x = 8r
help(args)
args(lm)
help(lm)
install.packages('tinytex')
install.packages("knitr")
setwd("~/ITAM/Tesis/Julia con R/Code/Censo")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/ITAM/Tesis/Julia con R/Code/Censo")
data <- read.csv("5mil.csv")
View(data)
ajuste <- lm(INGTRMEN ~ SEXO + EDAD + NIVACAD + HORTRA + ENT_PAIS_TRAB, data)
View(ajuste)
ajuste <- lm(INGTRMEN ~ SEXO + EDAD + NIVACAD + HORTRA + ENT_PAIS_TRAB, data)
summary(ajuste)
ajuste <- lm(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) + HORTRA + as.factor(ENT_PAIS_TRAB), data)
summary(ajuste)
