library(dplyr)
prueba <- temp %>% select(-"personas_filtradas.csv")
prueba <- temp[[-"personas_filtradas.csv"]]
prueba <- temp[-"personas_filtradas.csv"]
prueba <- temp(-"personas_filtradas.csv")
temp <- list.files(pattern = "*.csv")
setwd("~/ITAM/Tesis/Julia con R/Code/Censo/Resultados_Julia")
temp <- list.files(pattern = "*.csv")
prueba <- temp(-"personas_filtradas.csv")
prueba <- temp[[-"personas_filtradas.csv"]]
type(temp)
temp
typeof(temp)
temp(1)
temp[[1]]
temp[["500_fit10.csv"]]
typeof(myfiles)
setwd("~/ITAM/Tesis/Julia con R/Code/Censo/Resultados_Julia")
temp <- list.files(pattern = "*.csv")
myfiles <- lapply(temp, read.csv)
temp
n = length(myfiles)
n = length(myfiles)
dataframes <- myfiles[[1:n/2]]
n = length(myfiles)
dataframes <- myfiles[[1:(n/2)]]
n
myfiles[[1]]
typeof(myfiles)
View(myfiles)
?assign
n = length(myfiles)
for (i in 1:(n/2)){
assign(temp(i), myfiles[[i]])
}
temp(1)
typeof(temp)
temp
temp[1]
n = length(myfiles)
for (i in 1:(n/2)){
assign(temp[i], myfiles[[i]])
}
View(`500_fit10.csv`)
View(`500_fit10.csv`)
View(`500_fit5.csv`)
ajuste <- lm(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) + HORTRA + as.factor(ENT_PAIS_TRAB), "500_fit10.csv")
n = length(temp)
for (i in 1:n){
str_replace(temp[i], ".csv", "")
}
library(stringr)
n = length(temp)
for (i in 1:n){
str_replace(temp[i], ".csv", "")
}
temp
n = length(temp)
for (i in 1:n){
temp <- str_replace(temp[i], ".csv", "")
}
temp
temp <- list.files(pattern = "*.csv")
temp
str_replace(temp[1], ".csv", "")
prueba <- str_replace(temp[1], ".csv", "")
prueba
n = length(temp)
for (i in 1:n){
temp <- str_replace(temp[i], ".csv", "")
}
temp
temp <- list.files(pattern = "*.csv")
n = length(temp)
for (i in 1:n){
temp[i] <- str_replace(temp[i], ".csv", "")
}
temp
setwd("~/ITAM/Tesis/Julia con R/Code/Censo/Resultados_Julia")
temp <- list.files(pattern = "*.csv")
myfiles <- lapply(temp, read.csv)
n = length(temp)
for (i in 1:n){
temp[i] <- str_replace(temp[i], ".csv", "")
}
n = length(myfiles)
for (i in 1:(n/2)){
assign(temp[i], myfiles[[i]])
}
ajuste <- lm(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) + HORTRA + as.factor(ENT_PAIS_TRAB), '500_fit10')
ajuste <- lm(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) + HORTRA + as.factor(ENT_PAIS_TRAB), `500_fit10`)
summary(ajuste)
n = length(myfiles)
for (i in 1:n){
assign(temp[i], myfiles[[i]])
}
View(res_500_fit10)
?get
get(temp[25])
?assign
i = 25
aux <- get(temp[i])
View(aux)
assign(aux, aux %>%
select(Name, `Coef.`))
aux %>% select(Name, `Coef.`)
i = 25
aux <- get(temp[i])
aux <- aux %>%
select(Name, `Coef.`) %>%
rename(Julia = `Coef.`)
assign(temp[i], aux)
temp[25]
get(temp[25])
for (i in (n/2 + 1):n){
aux <- get(temp[i])
aux <- aux %>%
select(Name, `Coef.`) %>%
rename(Julia = `Coef.`)
assign(temp[i], aux)
}
setwd("~/ITAM/Tesis/Julia con R/Code/Censo/Resultados_Julia")
temp <- list.files(pattern = "*.csv")
myfiles <- lapply(temp, read.csv)
n = length(temp)
for (i in 1:n){
temp[i] <- str_replace(temp[i], ".csv", "")
}
n = length(myfiles)
for (i in 1:n){
assign(temp[i], myfiles[[i]])
}
for (i in (n/2 + 1):n){
aux <- get(temp[i])
aux <- aux %>%
select(Name, `Coef.`) %>%
rename(Julia = `Coef.`)
assign(temp[i], aux)
}
View(res_5mil_fit6)
temp
ajuste$coefficients
@formula
formula
?formula
TEMP[25]
temp[25]
aux <- get(temp[1])
View(aux)
get(temp[25])
str_detect(temp, "fit10")
prueba <- str_detect(temp, "fit10")
prueba
?str_detect
temp[prueba]
i = 1
aux <- get(fit10_strings[i])
fit10_strings <- temp[str_detect(temp, "fit10")]
aux <- get(fit10_strings[i])
View(aux)
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k = length(fit10_strings)
for (i in 1:k){
aux <- get(fit10_strings[i])
ajuste <- lm(formula, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(temp[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(fit10_strings[(k/2) + i], res_aux)
}
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
for (i in 1:k){
aux <- get(fit10_strings[i])
ajuste <- lm(formula, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(temp[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(fit10_strings[(k/2) + i], res_aux)
}
fit10_strings
typeof(fit10_strings)
length(fit10_strings)
k <- length(fit10_strings)
i = 1
aux <- get(fit10_strings[i])
View(aux)
ajuste <- lm(formula, aux)
ajuste <- lm(fm_10, aux)
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
for (i in 1:k){
aux <- get(fit10_strings[i])
ajuste <- lm(fm_10, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(temp[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(fit10_strings[(k/2) + i], res_aux)
}
coeficientes <- ajuste$coefficients
es_aux <- get(temp[(k/2) + i])
View(es_aux)
res_aux <- get(fit10_strings[(k/2) + i])
View(res_aux)
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(fit10_strings[(k/2) + i], res_aux)
View(res_500_fit10)
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
for (i in 1:k){
aux <- get(fit10_strings[i])
ajuste <- lm(fm_10, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(fit10_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(fit10_strings[(k/2) + i], res_aux)
}
setwd("~/ITAM/Tesis/Julia con R/Code/Censo/Resultados_Julia")
temp <- list.files(pattern = "*.csv")
myfiles <- lapply(temp, read.csv)
n = length(temp)
for (i in 1:n){
temp[i] <- str_replace(temp[i], ".csv", "")
}
n = length(temp)
for (i in 1:n){
temp[i] <- str_replace(temp[i], ".csv", "")
}
n = length(myfiles)
for (i in 1:n){
assign(temp[i], myfiles[[i]])
}
for (i in (n/2 + 1):n){
aux <- get(temp[i])
aux <- aux %>%
select(Name, `Coef.`) %>%
rename(Julia = `Coef.`)
assign(temp[i], aux)
}
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
for (i in 1:k){
aux <- get(fit10_strings[i])
ajuste <- lm(fm_10, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(fit10_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(fit10_strings[(k/2) + i], res_aux)
}
i
fit10_strings
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
for (i in 1:(k/2)){
aux <- get(fit10_strings[i])
ajuste <- lm(fm_10, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(fit10_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(fit10_strings[(k/2) + i], res_aux)
}
#Función para unir los resultados de R con los de Julia
union_resultados <- function(vec_strings, fm){
for (i in 1:(k/2)){
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(vec_strings[(k/2) + i], res_aux)
}
}
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
union_resultados(fit10_strings, fm_10)
View(res_500_fit10)
View(res_500mil_fit10)
fm_5 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB))
fit5_strings <- temp[str_detect(temp, "fit5")]
k <- length(fit5_strings)
View(res_5mil_fit5)
fm_5 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB))
fit5_strings <- temp[str_detect(temp, "fit5")]
k <- length(fit5_strings)
union_resultados(fit5_strings, fm_5)
View(res_5mil_fit5)
#Función para unir los resultados de R con los de Julia
union_resultados <- function(vec_strings, fm){
for (i in 1:(k/2)){
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(vec_strings[(k/2) + i], res_aux)
}
}
fm_5 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB))
fit5_strings <- temp[str_detect(temp, "fit5")]
k <- length(fit5_strings)
union_resultados(fit5_strings, fm_5)
View(res_5mil_fit5)
View(res_5mil_fit10)
fit5_strings
View(res_50mil_fit5)
View(res_500mil_fit5)
union_resultados(fit5_strings, fm_5)
View(res_500mil_fit5)
setwd("~/ITAM/Tesis/Julia con R/Code/Censo/Resultados_Julia")
temp <- list.files(pattern = "*.csv")
myfiles <- lapply(temp, read.csv)
n = length(temp)
for (i in 1:n){
temp[i] <- str_replace(temp[i], ".csv", "")
}
n = length(myfiles)
for (i in 1:n){
assign(temp[i], myfiles[[i]])
}
for (i in (n/2 + 1):n){
aux <- get(temp[i])
aux <- aux %>%
select(Name, `Coef.`) %>%
rename(Julia = `Coef.`)
assign(temp[i], aux)
}
#Función para unir los resultados de R con los de Julia
union_resultados <- function(vec_strings, fm){
for (i in 1:(k/2)){
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(vec_strings[(k/2) + i], res_aux)
}
}
fm_5 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB))
fit5_strings <- temp[str_detect(temp, "fit5")]
k <- length(fit5_strings)
union_resultados(fit5_strings, fm_5)
View(res_50mil_fit5)
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
union_resultados(fit10_strings, fm_10)
View(res_5mil_fit10)
i = 1
k = 8
vec_strings <- fit5_strings
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
fm <- formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB))
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
View(res_aux)
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(vec_strings[(k/2) + i], res_aux)
View(res_500_fit5)
i = 2
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
View(res_aux)
assign(vec_strings[(k/2) + i], res_aux)
View(res_500mil_fit5)
#Función para unir los resultados de R con los de Julia
union_resultados <- function(vec_strings, fm){
for (i in 1:(k/2)){
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
assign(vec_strings[(k/2) + i], res_aux)
}
}
fm_5 <- formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB))
fit5_strings <- temp[str_detect(temp, "fit5")]
k <- length(fit5_strings)
union_resultados(fit5_strings, fm_5)
View(`500_fit5`)
View(res_500_fit5)
View(res_500mil_fit5)
View(res_50mil_fit5)
View(res_5mil_fit5)
fit5_strings
?assign
#Función para unir los resultados de R con los de Julia
union_resultados <- function(vec_strings, fm){
for (i in 1:(k/2)){
aux <- get(vec_strings[i])
ajuste <- lm(fm, aux)
coeficientes <- ajuste$coefficients
res_aux <- get(vec_strings[(k/2) + i])
res_aux <- res_aux %>%
mutate(R = coeficientes)
return (res_aux)
}
}
fm_5 <- formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB))
fit5_strings <- temp[str_detect(temp, "fit5")]
k <- length(fit5_strings)
for (i in (k/2 +1):k){
assign(fit5_strings[i], union_resultados(fit5_strings, fm_5))
}
View(res_5mil_fit5)
View(res_50mil_fit5)
View(res_500mil_fit5)
fm_10 = formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) +
as.factor(VACACIONES) + as.factor(SERVICIO_MEDICO))
fit10_strings <- temp[str_detect(temp, "fit10")]
k <- length(fit10_strings)
for (i in (k/2 +1):k){
assign(fit10_strings[i], union_resultados(fit10_strings, fm_10))
}
View(res_500mil_fit10)
View(res_5mil_fit10)
fm_6 <- formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA))
fit6_strings <- temp[str_detect(temp, "fit6")]
k <- length(fit6_strings)
for (i in (k/2 +1):k){
assign(fit6_strings[i], union_resultados(fit6_strings, fm_6))
}
View(res_5mil_fit6)
fm_7 <- formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET))
fit7_strings <- temp[str_detect(temp, "fit7")]
k <- length(fit7_strings)
for (i in (k/2 +1):k){
assign(fit7_strings[i], union_resultados(fit7_strings, fm_7))
}
View(res_5mil_fit7)
fm_8 <- formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO))
fit8_strings <- temp[str_detect(temp, "fit8")]
k <- length(fit8_strings)
for (i in (k/2 +1):k){
assign(fit8_strings[i], union_resultados(fit8_strings, fm_8))
}
View(res_5mil_fit8)
fm_9 <- formula(INGTRMEN ~ as.factor(SEXO) + EDAD + as.factor(NIVACAD) +
HORTRA +   as.factor(ENT_PAIS_TRAB) + as.factor(SITTRA) +
as.factor(ALFABET) + as.factor(AGUINALDO) + as.factor(VACACIONES))
fit9_strings <- temp[str_detect(temp, "fit9")]
k <- length(fit9_strings)
for (i in (k/2 +1):k){
assign(fit9_strings[i], union_resultados(fit9_strings, fm_9))
}
View(res_5mil_fit9)
